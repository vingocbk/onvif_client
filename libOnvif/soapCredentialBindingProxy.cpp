/* soapCredentialBindingProxy.cpp
   Generated by gSOAP 2.8.114 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapCredentialBindingProxy.h"

CredentialBindingProxy::CredentialBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	CredentialBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

CredentialBindingProxy::CredentialBindingProxy(const CredentialBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

CredentialBindingProxy::CredentialBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	CredentialBindingProxy_init(_soap->imode, _soap->omode);
}

CredentialBindingProxy::CredentialBindingProxy(struct soap *_soap, const char *soap_endpoint_url)
{	this->soap = _soap;
	this->soap_own = false;
	CredentialBindingProxy_init(_soap->imode, _soap->omode);
	soap_endpoint = soap_endpoint_url;
}

CredentialBindingProxy::CredentialBindingProxy(const char *soap_endpoint_url)
{	this->soap = soap_new();
	this->soap_own = true;
	CredentialBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = soap_endpoint_url;
}

CredentialBindingProxy::CredentialBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	CredentialBindingProxy_init(iomode, iomode);
}

CredentialBindingProxy::CredentialBindingProxy(const char *soap_endpoint_url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	CredentialBindingProxy_init(iomode, iomode);
	soap_endpoint = soap_endpoint_url;
}

CredentialBindingProxy::CredentialBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	CredentialBindingProxy_init(imode, omode);
}

CredentialBindingProxy::~CredentialBindingProxy()
{	if (this->soap_own)
	{	this->destroy();
		soap_free(this->soap);
	}
}

void CredentialBindingProxy::CredentialBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL },
        { "SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL },
        { "wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL },
        { "c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL },
        { "ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL },
        { "saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL },
        { "saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL },
        { "wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL },
        { "xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL },
        { "wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL },
        { "wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL },
        { "wsdd10", "http://tempuri.org/wsdd10.xsd", NULL, NULL },
        { "wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL },
        { "ns1", "http://www.onvif.org/ver20/analytics/humanface", NULL, NULL },
        { "ns2", "http://www.onvif.org/ver20/analytics/humanbody", NULL, NULL },
        { "ns4", "http://www.onvif.org/ver10/pacs", NULL, NULL },
        { "xmime", "http://tempuri.org/xmime.xsd", NULL, NULL },
        { "xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL },
        { "tt", "http://www.onvif.org/ver10/schema", NULL, NULL },
        { "wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL },
        { "wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL },
        { "wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL },
        { "ns3", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL },
        { "ns5", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL },
        { "tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL },
        { "tas", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL },
        { "tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL },
        { "tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL },
        { "tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL },
        { "wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL },
        { "timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL },
        { "tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL },
        { "tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL },
        { "trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL },
        { "trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL },
        { "trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL },
        { "trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL },
        { NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

CredentialBindingProxy *CredentialBindingProxy::copy()
{	CredentialBindingProxy *dup = SOAP_NEW_UNMANAGED(CredentialBindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

CredentialBindingProxy& CredentialBindingProxy::operator=(const CredentialBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void CredentialBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void CredentialBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	CredentialBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void CredentialBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void CredentialBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security)
{
	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *CredentialBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *CredentialBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *CredentialBindingProxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this->soap);
}

const char *CredentialBindingProxy::soap_fault_string()
{	return ::soap_fault_string(this->soap);
}

const char *CredentialBindingProxy::soap_fault_detail()
{	return ::soap_fault_detail(this->soap);
}

int CredentialBindingProxy::soap_close_socket()
{	return ::soap_closesock(this->soap);
}

int CredentialBindingProxy::soap_force_close_socket()
{	return ::soap_force_closesock(this->soap);
}

void CredentialBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void CredentialBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *CredentialBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int CredentialBindingProxy::send_GetServiceCapabilities(const char *soap_endpoint_url, const char *soap_action, _ns5__GetServiceCapabilities *ns5__GetServiceCapabilities)
{
	struct __ns5__GetServiceCapabilities soap_tmp___ns5__GetServiceCapabilities;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetServiceCapabilities";
	soap_tmp___ns5__GetServiceCapabilities.ns5__GetServiceCapabilities = ns5__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetServiceCapabilities(soap, &soap_tmp___ns5__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetServiceCapabilities(soap, &soap_tmp___ns5__GetServiceCapabilities, "-ns5:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetServiceCapabilities(soap, &soap_tmp___ns5__GetServiceCapabilities, "-ns5:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetServiceCapabilities(_ns5__GetServiceCapabilitiesResponse &ns5__GetServiceCapabilitiesResponse)
{
	ns5__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetServiceCapabilitiesResponse.soap_get(soap, "ns5:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_GetSupportedFormatTypes(const char *soap_endpoint_url, const char *soap_action, _ns5__GetSupportedFormatTypes *ns5__GetSupportedFormatTypes)
{
	struct __ns5__GetSupportedFormatTypes soap_tmp___ns5__GetSupportedFormatTypes;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetSupportedFormatTypes";
	soap_tmp___ns5__GetSupportedFormatTypes.ns5__GetSupportedFormatTypes = ns5__GetSupportedFormatTypes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetSupportedFormatTypes(soap, &soap_tmp___ns5__GetSupportedFormatTypes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetSupportedFormatTypes(soap, &soap_tmp___ns5__GetSupportedFormatTypes, "-ns5:GetSupportedFormatTypes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetSupportedFormatTypes(soap, &soap_tmp___ns5__GetSupportedFormatTypes, "-ns5:GetSupportedFormatTypes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetSupportedFormatTypes(_ns5__GetSupportedFormatTypesResponse &ns5__GetSupportedFormatTypesResponse)
{
	ns5__GetSupportedFormatTypesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetSupportedFormatTypesResponse.soap_get(soap, "ns5:GetSupportedFormatTypesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_GetCredentialInfo(const char *soap_endpoint_url, const char *soap_action, _ns5__GetCredentialInfo *ns5__GetCredentialInfo)
{
	struct __ns5__GetCredentialInfo soap_tmp___ns5__GetCredentialInfo;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfo";
	soap_tmp___ns5__GetCredentialInfo.ns5__GetCredentialInfo = ns5__GetCredentialInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetCredentialInfo(soap, &soap_tmp___ns5__GetCredentialInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetCredentialInfo(soap, &soap_tmp___ns5__GetCredentialInfo, "-ns5:GetCredentialInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetCredentialInfo(soap, &soap_tmp___ns5__GetCredentialInfo, "-ns5:GetCredentialInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetCredentialInfo(_ns5__GetCredentialInfoResponse &ns5__GetCredentialInfoResponse)
{
	ns5__GetCredentialInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCredentialInfoResponse.soap_get(soap, "ns5:GetCredentialInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_GetCredentialInfoList(const char *soap_endpoint_url, const char *soap_action, _ns5__GetCredentialInfoList *ns5__GetCredentialInfoList)
{
	struct __ns5__GetCredentialInfoList soap_tmp___ns5__GetCredentialInfoList;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfoList";
	soap_tmp___ns5__GetCredentialInfoList.ns5__GetCredentialInfoList = ns5__GetCredentialInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetCredentialInfoList(soap, &soap_tmp___ns5__GetCredentialInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetCredentialInfoList(soap, &soap_tmp___ns5__GetCredentialInfoList, "-ns5:GetCredentialInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetCredentialInfoList(soap, &soap_tmp___ns5__GetCredentialInfoList, "-ns5:GetCredentialInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetCredentialInfoList(_ns5__GetCredentialInfoListResponse &ns5__GetCredentialInfoListResponse)
{
	ns5__GetCredentialInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCredentialInfoListResponse.soap_get(soap, "ns5:GetCredentialInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_GetCredentials(const char *soap_endpoint_url, const char *soap_action, _ns5__GetCredentials *ns5__GetCredentials)
{
	struct __ns5__GetCredentials soap_tmp___ns5__GetCredentials;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentials";
	soap_tmp___ns5__GetCredentials.ns5__GetCredentials = ns5__GetCredentials;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetCredentials(soap, &soap_tmp___ns5__GetCredentials);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetCredentials(soap, &soap_tmp___ns5__GetCredentials, "-ns5:GetCredentials", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetCredentials(soap, &soap_tmp___ns5__GetCredentials, "-ns5:GetCredentials", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetCredentials(_ns5__GetCredentialsResponse &ns5__GetCredentialsResponse)
{
	ns5__GetCredentialsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCredentialsResponse.soap_get(soap, "ns5:GetCredentialsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_GetCredentialList(const char *soap_endpoint_url, const char *soap_action, _ns5__GetCredentialList *ns5__GetCredentialList)
{
	struct __ns5__GetCredentialList soap_tmp___ns5__GetCredentialList;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialList";
	soap_tmp___ns5__GetCredentialList.ns5__GetCredentialList = ns5__GetCredentialList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetCredentialList(soap, &soap_tmp___ns5__GetCredentialList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetCredentialList(soap, &soap_tmp___ns5__GetCredentialList, "-ns5:GetCredentialList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetCredentialList(soap, &soap_tmp___ns5__GetCredentialList, "-ns5:GetCredentialList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetCredentialList(_ns5__GetCredentialListResponse &ns5__GetCredentialListResponse)
{
	ns5__GetCredentialListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCredentialListResponse.soap_get(soap, "ns5:GetCredentialListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_CreateCredential(const char *soap_endpoint_url, const char *soap_action, _ns5__CreateCredential *ns5__CreateCredential)
{
	struct __ns5__CreateCredential soap_tmp___ns5__CreateCredential;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/CreateCredential";
	soap_tmp___ns5__CreateCredential.ns5__CreateCredential = ns5__CreateCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__CreateCredential(soap, &soap_tmp___ns5__CreateCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__CreateCredential(soap, &soap_tmp___ns5__CreateCredential, "-ns5:CreateCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__CreateCredential(soap, &soap_tmp___ns5__CreateCredential, "-ns5:CreateCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_CreateCredential(_ns5__CreateCredentialResponse &ns5__CreateCredentialResponse)
{
	ns5__CreateCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateCredentialResponse.soap_get(soap, "ns5:CreateCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_SetCredential(const char *soap_endpoint_url, const char *soap_action, _ns5__SetCredential *ns5__SetCredential)
{
	struct __ns5__SetCredential soap_tmp___ns5__SetCredential;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/SetCredential";
	soap_tmp___ns5__SetCredential.ns5__SetCredential = ns5__SetCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__SetCredential(soap, &soap_tmp___ns5__SetCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__SetCredential(soap, &soap_tmp___ns5__SetCredential, "-ns5:SetCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__SetCredential(soap, &soap_tmp___ns5__SetCredential, "-ns5:SetCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_SetCredential(_ns5__SetCredentialResponse &ns5__SetCredentialResponse)
{
	ns5__SetCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SetCredentialResponse.soap_get(soap, "ns5:SetCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_ModifyCredential(const char *soap_endpoint_url, const char *soap_action, _ns5__ModifyCredential *ns5__ModifyCredential)
{
	struct __ns5__ModifyCredential soap_tmp___ns5__ModifyCredential;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/ModifyCredential";
	soap_tmp___ns5__ModifyCredential.ns5__ModifyCredential = ns5__ModifyCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__ModifyCredential(soap, &soap_tmp___ns5__ModifyCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__ModifyCredential(soap, &soap_tmp___ns5__ModifyCredential, "-ns5:ModifyCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__ModifyCredential(soap, &soap_tmp___ns5__ModifyCredential, "-ns5:ModifyCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_ModifyCredential(_ns5__ModifyCredentialResponse &ns5__ModifyCredentialResponse)
{
	ns5__ModifyCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ModifyCredentialResponse.soap_get(soap, "ns5:ModifyCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_DeleteCredential(const char *soap_endpoint_url, const char *soap_action, _ns5__DeleteCredential *ns5__DeleteCredential)
{
	struct __ns5__DeleteCredential soap_tmp___ns5__DeleteCredential;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DeleteCredential";
	soap_tmp___ns5__DeleteCredential.ns5__DeleteCredential = ns5__DeleteCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__DeleteCredential(soap, &soap_tmp___ns5__DeleteCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__DeleteCredential(soap, &soap_tmp___ns5__DeleteCredential, "-ns5:DeleteCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__DeleteCredential(soap, &soap_tmp___ns5__DeleteCredential, "-ns5:DeleteCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_DeleteCredential(_ns5__DeleteCredentialResponse &ns5__DeleteCredentialResponse)
{
	ns5__DeleteCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteCredentialResponse.soap_get(soap, "ns5:DeleteCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_GetCredentialState(const char *soap_endpoint_url, const char *soap_action, _ns5__GetCredentialState *ns5__GetCredentialState)
{
	struct __ns5__GetCredentialState soap_tmp___ns5__GetCredentialState;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialState";
	soap_tmp___ns5__GetCredentialState.ns5__GetCredentialState = ns5__GetCredentialState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetCredentialState(soap, &soap_tmp___ns5__GetCredentialState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetCredentialState(soap, &soap_tmp___ns5__GetCredentialState, "-ns5:GetCredentialState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetCredentialState(soap, &soap_tmp___ns5__GetCredentialState, "-ns5:GetCredentialState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetCredentialState(_ns5__GetCredentialStateResponse &ns5__GetCredentialStateResponse)
{
	ns5__GetCredentialStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCredentialStateResponse.soap_get(soap, "ns5:GetCredentialStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_EnableCredential(const char *soap_endpoint_url, const char *soap_action, _ns5__EnableCredential *ns5__EnableCredential)
{
	struct __ns5__EnableCredential soap_tmp___ns5__EnableCredential;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/EnableCredential";
	soap_tmp___ns5__EnableCredential.ns5__EnableCredential = ns5__EnableCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__EnableCredential(soap, &soap_tmp___ns5__EnableCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__EnableCredential(soap, &soap_tmp___ns5__EnableCredential, "-ns5:EnableCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__EnableCredential(soap, &soap_tmp___ns5__EnableCredential, "-ns5:EnableCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_EnableCredential(_ns5__EnableCredentialResponse &ns5__EnableCredentialResponse)
{
	ns5__EnableCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__EnableCredentialResponse.soap_get(soap, "ns5:EnableCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_DisableCredential(const char *soap_endpoint_url, const char *soap_action, _ns5__DisableCredential *ns5__DisableCredential)
{
	struct __ns5__DisableCredential soap_tmp___ns5__DisableCredential;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DisableCredential";
	soap_tmp___ns5__DisableCredential.ns5__DisableCredential = ns5__DisableCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__DisableCredential(soap, &soap_tmp___ns5__DisableCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__DisableCredential(soap, &soap_tmp___ns5__DisableCredential, "-ns5:DisableCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__DisableCredential(soap, &soap_tmp___ns5__DisableCredential, "-ns5:DisableCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_DisableCredential(_ns5__DisableCredentialResponse &ns5__DisableCredentialResponse)
{
	ns5__DisableCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DisableCredentialResponse.soap_get(soap, "ns5:DisableCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_ResetAntipassbackViolation(const char *soap_endpoint_url, const char *soap_action, _ns5__ResetAntipassbackViolation *ns5__ResetAntipassbackViolation)
{
	struct __ns5__ResetAntipassbackViolation soap_tmp___ns5__ResetAntipassbackViolation;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/ResetAntipassbackViolation";
	soap_tmp___ns5__ResetAntipassbackViolation.ns5__ResetAntipassbackViolation = ns5__ResetAntipassbackViolation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__ResetAntipassbackViolation(soap, &soap_tmp___ns5__ResetAntipassbackViolation);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__ResetAntipassbackViolation(soap, &soap_tmp___ns5__ResetAntipassbackViolation, "-ns5:ResetAntipassbackViolation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__ResetAntipassbackViolation(soap, &soap_tmp___ns5__ResetAntipassbackViolation, "-ns5:ResetAntipassbackViolation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_ResetAntipassbackViolation(_ns5__ResetAntipassbackViolationResponse &ns5__ResetAntipassbackViolationResponse)
{
	ns5__ResetAntipassbackViolationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ResetAntipassbackViolationResponse.soap_get(soap, "ns5:ResetAntipassbackViolationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_GetCredentialIdentifiers(const char *soap_endpoint_url, const char *soap_action, _ns5__GetCredentialIdentifiers *ns5__GetCredentialIdentifiers)
{
	struct __ns5__GetCredentialIdentifiers soap_tmp___ns5__GetCredentialIdentifiers;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialIdentifiers";
	soap_tmp___ns5__GetCredentialIdentifiers.ns5__GetCredentialIdentifiers = ns5__GetCredentialIdentifiers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetCredentialIdentifiers(soap, &soap_tmp___ns5__GetCredentialIdentifiers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetCredentialIdentifiers(soap, &soap_tmp___ns5__GetCredentialIdentifiers, "-ns5:GetCredentialIdentifiers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetCredentialIdentifiers(soap, &soap_tmp___ns5__GetCredentialIdentifiers, "-ns5:GetCredentialIdentifiers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetCredentialIdentifiers(_ns5__GetCredentialIdentifiersResponse &ns5__GetCredentialIdentifiersResponse)
{
	ns5__GetCredentialIdentifiersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCredentialIdentifiersResponse.soap_get(soap, "ns5:GetCredentialIdentifiersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_SetCredentialIdentifier(const char *soap_endpoint_url, const char *soap_action, _ns5__SetCredentialIdentifier *ns5__SetCredentialIdentifier)
{
	struct __ns5__SetCredentialIdentifier soap_tmp___ns5__SetCredentialIdentifier;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/SetCredentialIdentifier";
	soap_tmp___ns5__SetCredentialIdentifier.ns5__SetCredentialIdentifier = ns5__SetCredentialIdentifier;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__SetCredentialIdentifier(soap, &soap_tmp___ns5__SetCredentialIdentifier);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__SetCredentialIdentifier(soap, &soap_tmp___ns5__SetCredentialIdentifier, "-ns5:SetCredentialIdentifier", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__SetCredentialIdentifier(soap, &soap_tmp___ns5__SetCredentialIdentifier, "-ns5:SetCredentialIdentifier", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_SetCredentialIdentifier(_ns5__SetCredentialIdentifierResponse &ns5__SetCredentialIdentifierResponse)
{
	ns5__SetCredentialIdentifierResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SetCredentialIdentifierResponse.soap_get(soap, "ns5:SetCredentialIdentifierResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_DeleteCredentialIdentifier(const char *soap_endpoint_url, const char *soap_action, _ns5__DeleteCredentialIdentifier *ns5__DeleteCredentialIdentifier)
{
	struct __ns5__DeleteCredentialIdentifier soap_tmp___ns5__DeleteCredentialIdentifier;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialIdentifier";
	soap_tmp___ns5__DeleteCredentialIdentifier.ns5__DeleteCredentialIdentifier = ns5__DeleteCredentialIdentifier;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__DeleteCredentialIdentifier(soap, &soap_tmp___ns5__DeleteCredentialIdentifier);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__DeleteCredentialIdentifier(soap, &soap_tmp___ns5__DeleteCredentialIdentifier, "-ns5:DeleteCredentialIdentifier", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__DeleteCredentialIdentifier(soap, &soap_tmp___ns5__DeleteCredentialIdentifier, "-ns5:DeleteCredentialIdentifier", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_DeleteCredentialIdentifier(_ns5__DeleteCredentialIdentifierResponse &ns5__DeleteCredentialIdentifierResponse)
{
	ns5__DeleteCredentialIdentifierResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteCredentialIdentifierResponse.soap_get(soap, "ns5:DeleteCredentialIdentifierResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_GetCredentialAccessProfiles(const char *soap_endpoint_url, const char *soap_action, _ns5__GetCredentialAccessProfiles *ns5__GetCredentialAccessProfiles)
{
	struct __ns5__GetCredentialAccessProfiles soap_tmp___ns5__GetCredentialAccessProfiles;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialAccessProfiles";
	soap_tmp___ns5__GetCredentialAccessProfiles.ns5__GetCredentialAccessProfiles = ns5__GetCredentialAccessProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetCredentialAccessProfiles(soap, &soap_tmp___ns5__GetCredentialAccessProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetCredentialAccessProfiles(soap, &soap_tmp___ns5__GetCredentialAccessProfiles, "-ns5:GetCredentialAccessProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetCredentialAccessProfiles(soap, &soap_tmp___ns5__GetCredentialAccessProfiles, "-ns5:GetCredentialAccessProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetCredentialAccessProfiles(_ns5__GetCredentialAccessProfilesResponse &ns5__GetCredentialAccessProfilesResponse)
{
	ns5__GetCredentialAccessProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCredentialAccessProfilesResponse.soap_get(soap, "ns5:GetCredentialAccessProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_SetCredentialAccessProfiles(const char *soap_endpoint_url, const char *soap_action, _ns5__SetCredentialAccessProfiles *ns5__SetCredentialAccessProfiles)
{
	struct __ns5__SetCredentialAccessProfiles soap_tmp___ns5__SetCredentialAccessProfiles;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/SetCredentialAccessProfiles";
	soap_tmp___ns5__SetCredentialAccessProfiles.ns5__SetCredentialAccessProfiles = ns5__SetCredentialAccessProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__SetCredentialAccessProfiles(soap, &soap_tmp___ns5__SetCredentialAccessProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__SetCredentialAccessProfiles(soap, &soap_tmp___ns5__SetCredentialAccessProfiles, "-ns5:SetCredentialAccessProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__SetCredentialAccessProfiles(soap, &soap_tmp___ns5__SetCredentialAccessProfiles, "-ns5:SetCredentialAccessProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_SetCredentialAccessProfiles(_ns5__SetCredentialAccessProfilesResponse &ns5__SetCredentialAccessProfilesResponse)
{
	ns5__SetCredentialAccessProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SetCredentialAccessProfilesResponse.soap_get(soap, "ns5:SetCredentialAccessProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_DeleteCredentialAccessProfiles(const char *soap_endpoint_url, const char *soap_action, _ns5__DeleteCredentialAccessProfiles *ns5__DeleteCredentialAccessProfiles)
{
	struct __ns5__DeleteCredentialAccessProfiles soap_tmp___ns5__DeleteCredentialAccessProfiles;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialAccessProfiles";
	soap_tmp___ns5__DeleteCredentialAccessProfiles.ns5__DeleteCredentialAccessProfiles = ns5__DeleteCredentialAccessProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__DeleteCredentialAccessProfiles(soap, &soap_tmp___ns5__DeleteCredentialAccessProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__DeleteCredentialAccessProfiles(soap, &soap_tmp___ns5__DeleteCredentialAccessProfiles, "-ns5:DeleteCredentialAccessProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__DeleteCredentialAccessProfiles(soap, &soap_tmp___ns5__DeleteCredentialAccessProfiles, "-ns5:DeleteCredentialAccessProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_DeleteCredentialAccessProfiles(_ns5__DeleteCredentialAccessProfilesResponse &ns5__DeleteCredentialAccessProfilesResponse)
{
	ns5__DeleteCredentialAccessProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteCredentialAccessProfilesResponse.soap_get(soap, "ns5:DeleteCredentialAccessProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_GetWhitelist(const char *soap_endpoint_url, const char *soap_action, _ns5__GetWhitelist *ns5__GetWhitelist)
{
	struct __ns5__GetWhitelist soap_tmp___ns5__GetWhitelist;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetWhitelist";
	soap_tmp___ns5__GetWhitelist.ns5__GetWhitelist = ns5__GetWhitelist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetWhitelist(soap, &soap_tmp___ns5__GetWhitelist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetWhitelist(soap, &soap_tmp___ns5__GetWhitelist, "-ns5:GetWhitelist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetWhitelist(soap, &soap_tmp___ns5__GetWhitelist, "-ns5:GetWhitelist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetWhitelist(_ns5__GetWhitelistResponse &ns5__GetWhitelistResponse)
{
	ns5__GetWhitelistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetWhitelistResponse.soap_get(soap, "ns5:GetWhitelistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_AddToWhitelist(const char *soap_endpoint_url, const char *soap_action, _ns5__AddToWhitelist *ns5__AddToWhitelist)
{
	struct __ns5__AddToWhitelist soap_tmp___ns5__AddToWhitelist;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/AddToWhitelist";
	soap_tmp___ns5__AddToWhitelist.ns5__AddToWhitelist = ns5__AddToWhitelist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__AddToWhitelist(soap, &soap_tmp___ns5__AddToWhitelist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__AddToWhitelist(soap, &soap_tmp___ns5__AddToWhitelist, "-ns5:AddToWhitelist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__AddToWhitelist(soap, &soap_tmp___ns5__AddToWhitelist, "-ns5:AddToWhitelist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_AddToWhitelist(_ns5__AddToWhitelistResponse &ns5__AddToWhitelistResponse)
{
	ns5__AddToWhitelistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__AddToWhitelistResponse.soap_get(soap, "ns5:AddToWhitelistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_RemoveFromWhitelist(const char *soap_endpoint_url, const char *soap_action, _ns5__RemoveFromWhitelist *ns5__RemoveFromWhitelist)
{
	struct __ns5__RemoveFromWhitelist soap_tmp___ns5__RemoveFromWhitelist;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/RemoveFromWhitelist";
	soap_tmp___ns5__RemoveFromWhitelist.ns5__RemoveFromWhitelist = ns5__RemoveFromWhitelist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__RemoveFromWhitelist(soap, &soap_tmp___ns5__RemoveFromWhitelist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__RemoveFromWhitelist(soap, &soap_tmp___ns5__RemoveFromWhitelist, "-ns5:RemoveFromWhitelist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__RemoveFromWhitelist(soap, &soap_tmp___ns5__RemoveFromWhitelist, "-ns5:RemoveFromWhitelist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_RemoveFromWhitelist(_ns5__RemoveFromWhitelistResponse &ns5__RemoveFromWhitelistResponse)
{
	ns5__RemoveFromWhitelistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__RemoveFromWhitelistResponse.soap_get(soap, "ns5:RemoveFromWhitelistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_DeleteWhitelist(const char *soap_endpoint_url, const char *soap_action, _ns5__DeleteWhitelist *ns5__DeleteWhitelist)
{
	struct __ns5__DeleteWhitelist soap_tmp___ns5__DeleteWhitelist;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DeleteWhitelist";
	soap_tmp___ns5__DeleteWhitelist.ns5__DeleteWhitelist = ns5__DeleteWhitelist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__DeleteWhitelist(soap, &soap_tmp___ns5__DeleteWhitelist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__DeleteWhitelist(soap, &soap_tmp___ns5__DeleteWhitelist, "-ns5:DeleteWhitelist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__DeleteWhitelist(soap, &soap_tmp___ns5__DeleteWhitelist, "-ns5:DeleteWhitelist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_DeleteWhitelist(_ns5__DeleteWhitelistResponse &ns5__DeleteWhitelistResponse)
{
	ns5__DeleteWhitelistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteWhitelistResponse.soap_get(soap, "ns5:DeleteWhitelistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_GetBlacklist(const char *soap_endpoint_url, const char *soap_action, _ns5__GetBlacklist *ns5__GetBlacklist)
{
	struct __ns5__GetBlacklist soap_tmp___ns5__GetBlacklist;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetBlacklist";
	soap_tmp___ns5__GetBlacklist.ns5__GetBlacklist = ns5__GetBlacklist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__GetBlacklist(soap, &soap_tmp___ns5__GetBlacklist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__GetBlacklist(soap, &soap_tmp___ns5__GetBlacklist, "-ns5:GetBlacklist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__GetBlacklist(soap, &soap_tmp___ns5__GetBlacklist, "-ns5:GetBlacklist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_GetBlacklist(_ns5__GetBlacklistResponse &ns5__GetBlacklistResponse)
{
	ns5__GetBlacklistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetBlacklistResponse.soap_get(soap, "ns5:GetBlacklistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_AddToBlacklist(const char *soap_endpoint_url, const char *soap_action, _ns5__AddToBlacklist *ns5__AddToBlacklist)
{
	struct __ns5__AddToBlacklist soap_tmp___ns5__AddToBlacklist;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/AddToBlacklist";
	soap_tmp___ns5__AddToBlacklist.ns5__AddToBlacklist = ns5__AddToBlacklist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__AddToBlacklist(soap, &soap_tmp___ns5__AddToBlacklist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__AddToBlacklist(soap, &soap_tmp___ns5__AddToBlacklist, "-ns5:AddToBlacklist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__AddToBlacklist(soap, &soap_tmp___ns5__AddToBlacklist, "-ns5:AddToBlacklist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_AddToBlacklist(_ns5__AddToBlacklistResponse &ns5__AddToBlacklistResponse)
{
	ns5__AddToBlacklistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__AddToBlacklistResponse.soap_get(soap, "ns5:AddToBlacklistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_RemoveFromBlacklist(const char *soap_endpoint_url, const char *soap_action, _ns5__RemoveFromBlacklist *ns5__RemoveFromBlacklist)
{
	struct __ns5__RemoveFromBlacklist soap_tmp___ns5__RemoveFromBlacklist;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/RemoveFromBlacklist";
	soap_tmp___ns5__RemoveFromBlacklist.ns5__RemoveFromBlacklist = ns5__RemoveFromBlacklist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__RemoveFromBlacklist(soap, &soap_tmp___ns5__RemoveFromBlacklist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__RemoveFromBlacklist(soap, &soap_tmp___ns5__RemoveFromBlacklist, "-ns5:RemoveFromBlacklist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__RemoveFromBlacklist(soap, &soap_tmp___ns5__RemoveFromBlacklist, "-ns5:RemoveFromBlacklist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_RemoveFromBlacklist(_ns5__RemoveFromBlacklistResponse &ns5__RemoveFromBlacklistResponse)
{
	ns5__RemoveFromBlacklistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__RemoveFromBlacklistResponse.soap_get(soap, "ns5:RemoveFromBlacklistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int CredentialBindingProxy::send_DeleteBlacklist(const char *soap_endpoint_url, const char *soap_action, _ns5__DeleteBlacklist *ns5__DeleteBlacklist)
{
	struct __ns5__DeleteBlacklist soap_tmp___ns5__DeleteBlacklist;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DeleteBlacklist";
	soap_tmp___ns5__DeleteBlacklist.ns5__DeleteBlacklist = ns5__DeleteBlacklist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns5__DeleteBlacklist(soap, &soap_tmp___ns5__DeleteBlacklist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns5__DeleteBlacklist(soap, &soap_tmp___ns5__DeleteBlacklist, "-ns5:DeleteBlacklist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__DeleteBlacklist(soap, &soap_tmp___ns5__DeleteBlacklist, "-ns5:DeleteBlacklist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int CredentialBindingProxy::recv_DeleteBlacklist(_ns5__DeleteBlacklistResponse &ns5__DeleteBlacklistResponse)
{
	ns5__DeleteBlacklistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteBlacklistResponse.soap_get(soap, "ns5:DeleteBlacklistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
